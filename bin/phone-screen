#!/bin/sh -e
#L:  MIT License
#L:
#l:  Copyright (c) 2023 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining a copy
#L:  of this software and associated documentation files (the "Software"), to deal
#L:  in the Software without restriction, including without limitation the rights
#L:  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#L:  copies of the Software, and to permit persons to whom the Software is
#L:  furnished to do so, subject to the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be included in all
#L:  copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#L:  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#L:  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#L:  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#L:  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#L:  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#L:  SOFTWARE.
##:
#h: Usage: phone-screen [OPTS...] SCREENSHOT
#h:
#h: Embed screenshot in a phone frame and output a SVG. Supported
#h: frames are: "x49tf".
#h:
#h:     -H        : Put the svg between "<html><body>".
#h:     -f FRAME  : Set the frame.
#h:     -w WIDTH  : SVG width.
#h:     -o OUTPUT : Output filename.
##:
phone_screen() {
    local OPTIND optopt h1= h2= frame="x49tf" output= width="200" adapt=
    
    ## Parse command line arguments.
    while getopts "Hf:w:o:" optopt; do
        case $optopt in
            f)  frame="${OPTARG}";;
            w)  width="${OPTARG}";;
            o)  output="${OPTARG}";;
            H)  h1="<html><body>" h2="</html></body>";;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if test ! -n "$1"; then
        echo >&2 "error: Please specify a screenshot."
        return 1
    fi
    if test ! -n "${output}"; then
        echo >&2 "error: Specify output the file with -o."
        return 1
    fi

    ## Calculate sizes.
    case "${frame}" in
        x49tf)
            local viewBox="0 0 300 620"
            local bX="10"
            local bY="60"
            local bWidth="275"
            local bHeight="500"
            local background="data:image/png;base64, $(base64 "${PHONE_SCREEN_PATH}/x49tf.png" | tr -d '\n')"
            ;;
        *)
            echo >&2 "error: Unknown frame: ${frame}"
            return 1
            ;;
    esac

    ## Calculate URLs.
    if test -e "$1"; then
        local format="$(basename "$1" | sed 's|.*\.||')"
        local screenshot="data:image/${format};base64, $(base64 "$1" | tr -d '\n')"
    else
        local screenshot="$1"
    fi

    ## Create SVG.
    local x1='<!DOCTYPE svg PUBLIC "-//w3c//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/svg11.dtd">'
    local x2='<?xml version="1.0" encoding="utf-8"?>'
    cat <<-EOF > "${output}"
	${h1:-${x2}
	${x1}}
	<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="${width}"  viewBox="${viewBox}">
	  <!-- Screenshot -->
	  <image xlink:href="${screenshot}"
	         x="${bX}" y="${bY}"
	         clip-path="url(#clip)"
	         width="${bWidth}"/>
	  <!-- Box -->
	  <defs>
	    <clipPath id="clip">
	      <rect x="${bX}" y="${bY}" width="${bWidth}" height="${bHeight}" />
	    </clipPath>
	  </defs>
	  <!-- Background image -->
	  <image xlink:href="${background}" width="100%" />
	</svg>
	${h2}
	EOF
}

## -------------------------------------------------------------------
PHONE_SCREEN_PATH="$(dirname "$0")/../share/phone-screen"
if test @"$(basename "$0")" = @"phone-screen";then
    case "${1}" in
        ''|-h|--help) 
            sed -n 's/^ *#h: \{0,1\}//p' "$0"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)  phone_screen "$@"; exit 0;;
    esac
fi
