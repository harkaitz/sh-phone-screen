#!/bin/sh -e
#L:  MIT License
#L:
#l:  Copyright (c) 2023 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining a copy
#L:  of this software and associated documentation files (the "Software"), to deal
#L:  in the Software without restriction, including without limitation the rights
#L:  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#L:  copies of the Software, and to permit persons to whom the Software is
#L:  furnished to do so, subject to the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be included in all
#L:  copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#L:  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#L:  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#L:  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#L:  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#L:  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#L:  SOFTWARE.
##:
#h: Usage: phone-screen [-f FRAME] { -o OFILE SCREENSHOT | SCREENSHOTS... }
#h:
#h: Embed screenshot in a phone frame and output a SVG. When no "-o" is given
#h: then the output name is "SCREENSHOT.FRAME.png".
#h:
#h: Supported frames: x49tf
##:
phone_screen() {
    local OPTIND optopt frame="x49tf" output= input
    
    ## Parse command line arguments.
    while getopts "f:o:" optopt; do
        case $optopt in
            f)  frame="${OPTARG}";;
            o)  output="${OPTARG}";; # For compativility.
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if test ! -n "$1"; then
        echo >&2 "error: Please specify a screenshot."
        return 1
    fi

    ## Calculate sizes.
    case "${frame}" in
        x49tf)
            local screen_width="230"
            local screen_height="415"
            local screen_pos_x="10"
            local screen_pos_y="50"
            local background="${PHONE_SCREEN_PATH}/x49tf.png"
            ;;
        *)
            echo >&2 "error: Unknown frame: ${frame}"
            return 1
            ;;
    esac
    
    ## For each input.
    for input in "$@"; do
        if test ! -n "${output}"; then
            output="${input%.*}.${frame}.png"
        fi
        convert "${input}"                       \
                -resize "${screen_width}x"       \
                -gravity North                   \
                -crop 230x"${screen_height}+0+0" \
                "${output}.cropped.png"
        composite                   \
            -geometry +"${screen_pos_x}"+"${screen_pos_y}" \
            "${output}.cropped.png" \
            "${background}"         \
            "${output}.screened.png"
        composite \
            "${background}" \
            "${output}.screened.png" \
            "${output}"
        rm -f "${output}.cropped.png" "${output}.screened.png"
        echo "${output}"
        output=
    done
}

## -------------------------------------------------------------------
PHONE_SCREEN_PATH="$(dirname "$0")/../share/phone-screen"
if test @"${SCRNAME:-$(basename "$0")}" = @"phone-screen"; then
    case "${1}" in
        ''|-h|--help) 
            sed -n 's/^ *#h: \{0,1\}//p' "$0"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)  phone_screen "$@"; exit 0;;
    esac
fi
